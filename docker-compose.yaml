version: '3'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - mongodb_network
    environment:
      MONGO_DB_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_DB_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DB_ADDR: "mongodb"

  nextjs:
    build:
      context: ./frontend/simple-yaub
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://backend:3001
    networks:
      - mongodb_network

  nginx:
    restart: unless-stopped
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - nextjs
    volumes:
      - ${SECRETS_LETSENCRYPT}:/etc/letsencrypt:ro
      - ${SECRETS_CERTBOT_DATA}:/var/www/certbot
    networks:
      - mongodb_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    volumes:
      - ${MONGODB_DATA}:/data/db/
      - ${MONGODB_LOGS}:/var/log/mongodb/
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - mongodb_network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    ports:
      - 8081:8081
    networks:
      - mongodb_network
    depends_on:
      - mongodb

networks:
  mongodb_network:
    driver: bridge
